
def findClosestValueInBst(tree, target):
    # Write your code here.
	diff=float('inf')
	old=0
	val=0
	s=0
    if( tree.value==target):
		return tree.value
	
	return find(tree,target,diff,old,val)
	
def find(tree,target,dif,old,val):	
	if( tree==None):
		return val
	old=abs(tree.value-target)
	if(old<dif):
		dif=old
		val=tree.value
	if(target<tree.value):
			return find(tree.left,target,dif,old,val)
	if(target>tree.value):
		if(target>tree.value):
			return find(tree.right,target,dif,old,val)
	else:
		return val
		

# This is the class of the input tree. Do not edit.
class BST:
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None
