def hexToDecimal(hex_string: str) -> int:
    """
    converts a given hexadecimal value to its decimal value
    >>> hexToDecimal("a")
    10
    >>> hexToDecimal("")
    ValueError: Empty string value was passed to the function
    >>> hexToDecimal("-12m")
    ValueError: None hexadecimal value was passed to the function
    >>> hexToDecimal("12f")
    303
    >>> hexToDecimal("   12f   ")
    303
    """
    decimal_number = 0
    hex_table = {
        "1": 1,
        "2": 2,
        "3": 3,
        "4": 4,
        "5": 5,
        "6": 6,
        "7": 7,
        "8": 8,
        "9": 9,
        "A": 10,
        "B": 11,
        "C": 12,
        "D": 13,
        "E": 14,
        "F": 15,
    }
    hex_string = hex_string.strip()
    if not hex_string: 
        raise ValueError("Invalid Hexadecimal Input")
    for char in hex_string:
        if char.upper() not in hex_table:
            raise ValueError("Invalid Hexadecimal Input")
        decimal_number = 16 * decimal_number + hex_table[char.upper()]
    return decimal_number


if __name__ == "__main__":
    from doctest import testmod

    testmod()
