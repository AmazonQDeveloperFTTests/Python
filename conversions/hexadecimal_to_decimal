def hex_to_decimal(hex_string: str) -> int:
    """
    converts a given hexadecimal value to its decimal value
    >>> hexToDecimal("a")
    10
    >>> hexToDecimal("")
    ValueError: Empty string value was passed to the function
    >>> hexToDecimal("-12m")
    ValueError: Non-hexadecimal value was passed to the function
    >>> hexToDecimal("12f")
    303
    >>> hexToDecimal("   12f   ")
    303
    """
    decimal_number = 0
    #https://www.programiz.com/python-programming/methods/built-in/hex
    #Hex numbers start with 0x. We use [2:] to get the hex number after 0x
    hex_table = {hex(i)[2:]: i for i in range(16)} 
    hex_string = hex_string.strip()
    if not hex_string: 
        raise ValueError("Invalid Hexadecimal Input")
    for char in hex_string:
        if char.lower() not in hex_table:
            raise ValueError("Invalid Hexadecimal Input")
        decimal_number = 16 * decimal_number + hex_table[char.upper()]
    return decimal_number


if __name__ == "__main__":
    from doctest import testmod

    testmod()
