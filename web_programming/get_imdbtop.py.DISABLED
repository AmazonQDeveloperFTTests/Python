import bs4
import requests


def get_movie_data_from_soup(soup: bs4.element.Tag) -> dict[str, str]:
    return {
        "isim": soup.h3.a.text,
        "tur": soup.find("span", class_="genre").text.strip(),
        "puan": soup.strong.text,
        "sayfa_baglantisi": f"https://www.imdb.com{soup.a.get('href')}",
    }


def get_imdb_top_movies(num_movies: int = 5) -> tuple:
    """IMDB'den en yüksek puanlı num_movies filmini al ve
    her filmin ismi, türü, puanı ve URL'sini içeren bir tuple döndür.

    Args:
        num_movies: Alınacak film sayısı. Varsayılan 5'tir.

    Returns:
        En iyi n film hakkında bilgi içeren bir tuple listesi.

    >>> len(get_imdb_top_movies(5))
    5
    >>> len(get_imdb_top_movies(-3))
    0
    >>> len(get_imdb_top_movies(4.99999))
    4
    """
    num_movies = int(float(num_movies))
    if num_movies < 1:
        return ()
    base_url = (
        "https://www.imdb.com/search/title?title_type="
        f"feature&sort=num_votes,desc&count={num_movies}"
    )
    source = bs4.BeautifulSoup(requests.get(base_url).content, "html.parser")
    return tuple(
        get_movie_data_from_soup(movie)
        for movie in source.find_all("div", class_="lister-item mode-advanced")
    )


if __name__ == "__main__":
    import json

    num_movies = int(input("Kaç film görmek istersiniz? "))
    print(
        ", ".join(
            json.dumps(movie, indent=4, ensure_ascii=False) for movie in get_imdb_top_movies(num_movies)
        )
    )
