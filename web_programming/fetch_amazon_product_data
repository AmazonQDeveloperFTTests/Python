'''This file provides a function which will take a particular product as arguement and fetch the data of that type of products from amazon 
along with the product title,url to that product,the ratings of the product,product price as well as the discount available on the product 
and return them in the form of a csv file,this will be helpful for users in quickly finding as well as comparing products as  all that data
will all be available at a single place in the form of a csv file'''



import pandas as pd
from bs4 import BeautifulSoup as bs
import requests
import itertools as it



def get_product_info(product = 'laptop'):                        #The function takes the product as input if no output is explicitly given,it will by default fetch data for laptops
  url = f'https://www.amazon.in/laptop/s?k={product}'            #genrating search query url for product using f-strings
  header = ({'User-Agent':'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko)Chrome/44.0.2403.157 Safari/537.36','Accept-Language': 'en-US, en;q=0.5'})         #This header will indicate to the destination server that the request is coming from a genuine user and not a bot
  page = requests.get(url,headers = header)
  page_content = page.text
  soup =bs(page_content)
  data = pd.DataFrame(columns = ['Product Title','Product Link','Current Price of the product','Product Rating','MRP of the product','Discount'])      #crteating a pandas dataframe to store all the data for csv file
  for i, j in it.zip_longest(soup.find_all("div",attrs={"class": 's-result-item','data-component-type': 's-search-result'}),soup.find_all("div",attrs={"class": 'a-row a-size-base a-color-base'})): # and for j in soup.find_all("div",attrs={"class": 'a-row a-size-base a-color-base'})::
    try:                                                           #extracting the requisite data and storing them in pandas dataframe and using try.....except block for handling exceptions that may arise
      product_title = i.h2.text 
      product_link = 'https://www.amazon.in/' + i.h2.a['href'] 
      product_price = i.find("span",attrs={"class": 'a-offscreen'}).text
      try:   
         product_rating = i.find('span',attrs={"class": 'a-icon-alt'}).text 
      except AttributeError:
         product_rating = 'Not available'
      try:
         product_mrp = '₹' + i.find("span",attrs={"class": 'a-price a-text-price'}).text.split('₹')[1]
      except AttributeError:
        product_mrp = ''
      try:
        discount = float(((float(product_mrp.strip('₹').replace(',',''))-float(product_price.strip('₹').replace(',','')))/float(product_mrp.strip('₹').replace(',','')))*100)
        #print(discount)
      except ValueError:
        discount = ''
    except AttributeError:
       pass
    data.loc[len(data.index)] = [product_title,product_link,product_price,product_rating,product_mrp,discount]
  data.loc[data['Current Price of the product'] > data['MRP of the product'], 'MRP of the product'] = ' '
  data.loc[data['Current Price of the product'] > data['MRP of the product'], 'Discount'] = ' '
  data.index += 1
  data.to_csv(f'Amazon Product Data({product}).csv')             #writing the data stored in pandas dataframe to the csv file
  return data
