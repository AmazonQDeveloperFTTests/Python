'''
Problem:
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
                0,1,1,2,3,5,8,13,21,34,55,89,..
Every third term from 0 is even So using this I have written a simple code
By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms.
e.g. for n=10, we have {2,8}, sum is 10.
'''
"""Python 3"""
import math
from decimal import *

getcontext().prec = 100
phi = (Decimal(5) ** Decimal(0.5) + 1) / Decimal(2)

n = Decimal(int(input()) - 1)

index = (math.floor(math.log(n * (phi + 2), phi) - 1)  // 3) * 3 + 2
num = round(phi ** Decimal(index + 1)) / (phi + 2)
sum = num // 2

print(int(sum))
